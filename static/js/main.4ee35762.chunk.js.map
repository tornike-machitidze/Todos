{"version":3,"sources":["components/Form.js","components/List.js","components/TodoList.js","App.js","index.js"],"names":["Form","todos","setTodos","setSelected","useState","inputText","setInputText","className","onChange","e","target","value","type","placeholder","onClick","preventDefault","text","completed","id","Math","random","List","todo","isCompleted","setIsCompleted","map","Number","targetId","filter","TodoList","filteredTodos","App","setFilteredTodos","selected","useEffect","localStorage","getItem","setItem","JSON","stringify","todoLocal","parse","getLocalTodos","el","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ee35762.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Form.css\";\r\n\r\nfunction Form({ todos, setTodos, setSelected }) {\r\n  let [inputText, setInputText] = useState(\"\");\r\n  function inputTextHandler(e) {\r\n    setInputText(e.target.value);\r\n  }\r\n\r\n  function todoHandler(e) {\r\n    e.preventDefault();\r\n    if (inputText) {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          text: inputText,\r\n          completed: false,\r\n          id: Math.random(),\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setInputText(\"\");\r\n  }\r\n\r\n  function slectorHandler(e) {\r\n    setSelected(e.target.value);\r\n  }\r\n  return (\r\n    <div className=\"form-container\">\r\n      <form>\r\n        <input\r\n          onChange={inputTextHandler}\r\n          value={inputText}\r\n          className=\"input-text\"\r\n          type=\"text\"\r\n          placeholder=\"write your todo here\"\r\n        />\r\n        <input\r\n          onClick={todoHandler}\r\n          className=\"input-submit\"\r\n          type=\"submit\"\r\n          value=\"add todo\"\r\n        />\r\n        <select onChange={slectorHandler}>\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React, { useState } from \"react\";\r\nimport \"./List.css\";\r\nfunction List({ todo, setTodos, todos }) {\r\n  let [isCompleted, setIsCompleted] = useState(false);\r\n  function removeHandler(e) {\r\n    let targetId = e.target.id;\r\n    e.preventDefault();\r\n    setTodos(\r\n      todos.filter((todo) => {\r\n        return Number(todo.id) !== Number(targetId);\r\n      })\r\n    );\r\n  }\r\n\r\n  function completeHandler(e) {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (Number(todo.id) === Number(e.target.id)) {\r\n          return { ...todo, completed: !todo.completed };\r\n        }\r\n        return todo;\r\n      })\r\n    );\r\n\r\n    setIsCompleted(!isCompleted);\r\n  }\r\n  return (\r\n    <li>\r\n      <p className={todo.completed ? \"completed\" : \"normal\"}>{todo.text}</p>\r\n      <div className=\"separate\">\r\n        <div\r\n          className={isCompleted ? \"completed-checkbox\" : \"checkbox\"}\r\n          onClick={completeHandler}\r\n          id={todo.id}\r\n        >\r\n          done\r\n        </div>\r\n        <button id={todo.id} onClick={removeHandler}>\r\n          X\r\n        </button>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport List from \"./List\";\r\n\r\nimport \"./TodoList.css\";\r\n\r\nfunction TodoList({ filteredTodos, setTodos, todos }) {\r\n  return (\r\n    <div className=\"ul-container\">\r\n      <ul className=\"ul\">\r\n        {filteredTodos.map((todo) => {\r\n          return (\r\n            <List setTodos={setTodos} todos={todos} key={todo.id} todo={todo} />\r\n          );\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TodoList;\r\n","import Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\nimport { useState, useEffect } from \"react\";\nfunction App() {\n  let [todos, setTodos] = useState([]);\n  let [filteredTodos, setFilteredTodos] = useState([]);\n  let [selected, setSelected] = useState(\"all\");\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    switch (selected) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos.map((el) => el));\n        break;\n    }\n    saveLocalTodos();\n  }, [todos, selected]);\n\n  function saveLocalTodos() {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n\n  function getLocalTodos() {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(\n        localStorage.getItem(\"todos\", JSON.stringify(todos))\n      );\n      setTodos(todoLocal);\n    }\n  }\n  return (\n    <div className=\"main-container\">\n      <Form setSelected={setSelected} todos={todos} setTodos={setTodos} />\n      <TodoList\n        setTodos={setTodos}\n        todos={todos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}